package com.ChanDoTeam.ChanDoApp.services;

import com.ChanDoTeam.ChanDoApp.models.Habit;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import java.util.HashMap;
import java.util.Map;

@Service
public class TelegramNotifier {
    private static final Logger logger = LoggerFactory.getLogger(TelegramNotifier.class);
    private static final String BOT_TOKEN = "7619304652:AAFndA7Yu8VfSA139YOSwqv3tDj1mRNcCIs";
    private static final String TELEGRAM_API_URL = "https://api.telegram.org/bot" + BOT_TOKEN + "/sendMessage";
    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("d MMMM yyyy")
            .withLocale(new Locale("ru"));
    private static final DateTimeFormatter TIME_FORMATTER = DateTimeFormatter.ofPattern("HH:mm");

    private final RestTemplate restTemplate;

    public TelegramNotifier(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    public void sendHabitAddedNotification(String telegramId, Habit habit) {
        try {
            String message = String.format(
                    "üéâ –í–∞—à–∞ %s –ø—Ä–∏–≤—ã—á–∫–∞\\: *%s* \n–ë—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ %s –∏ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ –±–æ—Ç—É\\!%n%n" +
                            "–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —ç—Ç–æ –≤—Ä–µ–º—è",
                    escapeMarkdown(habit.getCategory().toLowerCase()),
                    escapeMarkdown(habit.getTitle()),
                    escapeMarkdown(habit.getVisibleDate().format(DATE_FORMATTER))
            );

            logger.debug("Raw message before sending: {}", message);
            sendTelegramMessage(telegramId, message);
        } catch (Exception e) {
            logger.error("Failed to send habit added notification to {}: {}", telegramId, e.getMessage(), e);
        }
    }

    public void sendHabitReminder(String telegramId, Habit habit) {
        try {
            String message = String.format(
                    "‚è∞ *–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–∏–≤—ã—á–∫–µ\\!*%n%n" +
                            "üîπ *–ü—Ä–∏–≤—ã—á–∫–∞\\:* %s%n" +
                            "üìÖ *–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞\\:* %s%n" +
                            "üî• *–î–Ω–µ–π –ø–æ–¥—Ä—è–¥\\:* %d%n",
                    escapeMarkdown(habit.getTitle()),
                    escapeMarkdown(habit.getVisibleDate().format(DATE_FORMATTER)),
                    habit.getStreak()
            );

            sendTelegramMessage(telegramId, message);
        } catch (Exception e) {
            logger.error("Failed to send habit reminder to {}: {}", telegramId, e.getMessage(), e);
        }
    }

    private void sendTelegramMessage(String telegramId, String message) {
        try {
            // –°–æ–∑–¥–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
            Map<String, Object> requestBody = new HashMap<>();
            requestBody.put("chat_id", telegramId);
            requestBody.put("text", message);
            requestBody.put("parse_mode", "MarkdownV2");

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            HttpHeaders headers = new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_JSON);

            // –§–æ—Ä–º–∏—Ä—É–µ–º HTTP-—Å—É—â–Ω–æ—Å—Ç—å
            HttpEntity<Map<String, Object>> requestEntity = new HttpEntity<>(requestBody, headers);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å
            String response = restTemplate.postForObject(TELEGRAM_API_URL, requestEntity, String.class);
            logger.debug("Telegram API response: {}", response);
        } catch (Exception e) {
            logger.error("Failed to send Telegram message to {}: {}", telegramId, e.getMessage(), e);
            throw new RuntimeException("Failed to send Telegram message to " + telegramId, e);
        }
    }

    private String escapeMarkdown(String text) {
        if (text == null || text.isEmpty()) {
            return "";
        }
        // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã MarkdownV2
        return text.replace("_", "\\_")
                .replace("*", "\\*")
                .replace("[", "\\[")
                .replace("]", "\\]")
                .replace("(", "\\(")
                .replace(")", "\\)")
                .replace("~", "\\~")
                .replace("`", "\\`")
                .replace(">", "\\>")
                .replace("#", "\\#")
                .replace("+", "\\+")
                .replace("-", "\\-")
                .replace("=", "\\=")
                .replace("|", "\\|")
                .replace("{", "\\{")
                .replace("}", "\\}")
                .replace(".", "\\.")
                .replace("!", "\\!")
                .replace(":", "\\:")
                .replace("\\", "\\\\");
    }
}